# {{ ansible_managed }}
#
# Do not edit this file manually.
# Any changes will be automatically reverte
#
{# 
  ########################################
  # Begin of IMPORT                      #
  #                                      #
#}
{%- import 'systemd-network.j2' as object with context -%}
{# 
  #                                      #
  # End of IMPORT                        #
  ########################################
#}
{# ############################################################################
   ############################################################################

  ██████╗ ██████╗ ██╗██╗   ██╗ █████╗ ████████╗███████╗               
  ██╔══██╗██╔══██╗██║██║   ██║██╔══██╗╚══██╔══╝██╔════╝               
  ██████╔╝██████╔╝██║██║   ██║███████║   ██║   █████╗                 
  ██╔═══╝ ██╔══██╗██║╚██╗ ██╔╝██╔══██║   ██║   ██╔══╝                 
  ██║     ██║  ██║██║ ╚████╔╝ ██║  ██║   ██║   ███████╗               
  ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝  ╚═╝  ╚═╝   ╚═╝   ╚══════╝               
                                                                    
  ██╗   ██╗ █████╗ ██████╗ ██╗ █████╗ ██████╗ ██╗     ███████╗███████╗
  ██║   ██║██╔══██╗██╔══██╗██║██╔══██╗██╔══██╗██║     ██╔════╝██╔════╝
  ██║   ██║███████║██████╔╝██║███████║██████╔╝██║     █████╗  ███████╗
  ╚██╗ ██╔╝██╔══██║██╔══██╗██║██╔══██║██╔══██╗██║     ██╔══╝  ╚════██║
   ╚████╔╝ ██║  ██║██║  ██║██║██║  ██║██████╔╝███████╗███████╗███████║
    ╚═══╝  ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚══════╝╚══════╝

  ############################################################################
  ############################################################################}
{%- set _link = {
    'ADVERTISE': { 'Name':'Advertise', 'Type':'string' },
    'ALIAS': { 'Name':'Alias', 'Type':'string' },
    'ALTERNATIVENAME': { 'Name':'AlternativeName', 'Type':'string' },
    'ALTERNATIVENAMESPOLICY': { 
        'Name':'AlternativeNamesPolicy',
        'Type':'string' },
    'AUTONEGOTIATION': { 'Name':'AutoNegotiation', 'Type':'boolean' },
    'DESCRIPTION': { 'Name':'Description', 'Type':'string' },
    'DUPLEX': { 'Name':'Duplex', 'Type':'string' },
    'MACADDRESS': { 'Name':'MACAddress', 'Type':'string' },
    'MACADDRESSPOLICY': { 'Name':'MACAddressPolicy', 'Type':'string' },
    'MTUBYTES': { 'Name':'MTUBytes', 'Type':'number' },
    'NAME': { 'Name':'Name', 'Type':'string' },
    'NAMEPOLICY': { 'Name':'NamePolicy', 'Type':'string' },
    'PORT': { 'Name':'Port', 'Type':'string' },
    'WAKEONLAN': { 'Name':'WakeOnLan', 'Type':'string' },
    'COMBINEDCHANNELS': { 'Name':'CombinedChannels', 'Type':'number' },
    'GENERICRECEIVEOFFLOAD': { 
        'Name':'GenericReceiveOffload',
        'Type':'boolean' },
    'GENERICSEGMENTATIONOFFLOAD': { 
        'Name':'GenericSegmentationOffload',
        'Type':'boolean' },
    'LARGERECEIVEOFFLOAD': { 'Name':'LargeReceiveOffload', 'Type':'boolean' },
    'OTHERCHANNELS': { 'Name':'OtherChannels', 'Type':'number' },
    'RECEIVECHECKSUMOFFLOAD': { 
        'Name':'ReceiveChecksumOffload',
        'Type':'boolean' },
    'RXBUFFERSIZE': { 'Name':'RxBufferSize', 'Type':'number' },
    'RXCHANNELS': { 'Name':'RxChannels', 'Type':'number' },
    'TRANSMITCHECKSUMOFFLOAD': { 
        'Name':'TransmitChecksumOffload', 
        'Type':'boolean' },
    'TCPSEGMENTATIONOFFLOAD': { 
        'Name':'TCPSegmentationOffload', 
        'Type':'boolean' },
    'TCP6SEGMENTATIONOFFLOAD': { 
        'Name':'TCP6SegmentationOffload',
        'Type':'boolean' },
    'TXBUFFERSIZE': { 'Name':'TxBufferSize', 'Type':'number' },
    'TXCHANNELS': { 'Name':'TxChannels', 'Type':'number' } 
    } -%}
{%- set _match = {
    'ARCHITECTURE': { 'Name':'Architecture', 'Type':'string' },
    'DRIVER': { 'Name':'Driver', 'Type':'string' },
    'HOST': { 'Name':'Host', 'Type':'string' },
    'KERNELCOMMANDLINE': { 'Name':'KernelCommandLine', 'Type':'string' },
    'KERNELVERSION': { 'Name':'KernelVersion', 'Type':'string' },
    'MACADDRESS': { 'Name':'MACAddress', 'Type':'list' },
    'ORIGINALNAME': { 'Name':'OriginalName', 'Type':'string' },
    'PATH': { 'Name':'Path', 'Type':'string' },
    'PERMANENTMACADDRESS': { 'Name':'PermanentMACAddress', 'Type':'string' },
    'PROPERTY': { 'Name':'Property', 'Type':'string' },
    'VIRTUALIZATION': { 'Name':'Virtualization', 'Type':'boolean' },
    } -%}
{%- set _workspace = namespace(SECTIONS=[ 'MATCH' ]) -%}
{# ############################################################################
   ############################################################################

  ██████╗ ██████╗  ██████╗  ██████╗███████╗███████╗███████╗
  ██╔══██╗██╔══██╗██╔═══██╗██╔════╝██╔════╝██╔════╝██╔════╝
  ██████╔╝██████╔╝██║   ██║██║     █████╗  ███████╗███████╗
  ██╔═══╝ ██╔══██╗██║   ██║██║     ██╔══╝  ╚════██║╚════██║
  ██║     ██║  ██║╚██████╔╝╚██████╗███████╗███████║███████║
  ╚═╝     ╚═╝  ╚═╝ ╚═════╝  ╚═════╝╚══════╝╚══════╝╚══════╝

  ############################################################################
  ############################################################################}
{# Only process when item.udev  is defined and has the boolean 'True' #}
{%- if item.udev is defined and item.udev is true -%}
  {%- if 'LINK' not in _workspace.SECTIONS -%}
      {{ _workspace.SECTIONS.append('LINK') }}{%- endif-%}
  {%- if _workspace.SECTIONS is defined and _workspace.SECTIONS is not none -%}
    {{ object.SET_SECTIONS(_workspace.SECTIONS) }}{%- endif -%}
  {%- if _match -%}{{ object.SECTION_MAP('MATCH', _match) }}{%- endif -%}
  {%- if _link -%}{{ object.SECTION_MAP('LINK', _link) }}{%- endif -%}
  {%- for key, values in item.items() -%}
    {# 
      # Loop through all items that are set under 
      # vars:
      #   systemd_networks:
      #     - interface: eth0
      #       udev: True
      #       Architecture: x86_64
      #       Description: production interface
      #       Match::
      #         Type: ether
      #       Link:
      #         MTUBytes: 1500
      #         Duplex: full
    #}
    {%- set key = key| upper -%}
    {%- if key != 'INTERFACE' -%}
      {{ object.FIND_KEY( _workspace.SECTIONS, key, values) }}
    {%- endif -%}{# End of if key != 'INTERFACE' #}
  {%- endfor -%}{# for key, values in item.items() 
    
  ########################################
  # PRINT
  ######################################## #}
  {%- for section in _workspace.SECTIONS -%}{{ object.DISPLAY(section|upper) }}{%- endfor -%}
{%- endif -%}{# End of if item.udev is defined and item.udev is true #}
