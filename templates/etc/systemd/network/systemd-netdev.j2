# {{ ansible_managed }}
#
# Do not edit this file manually.
# Any changes will be automatically reverte
#
{# ############################################################################
   ############################################################################

  ██████╗ ██╗   ██╗██████╗ ██╗     ██╗ ██████╗        
  ██╔══██╗██║   ██║██╔══██╗██║     ██║██╔════╝        
  ██████╔╝██║   ██║██████╔╝██║     ██║██║             
  ██╔═══╝ ██║   ██║██╔══██╗██║     ██║██║             
  ██║     ╚██████╔╝██████╔╝███████╗██║╚██████╗        
  ╚═╝      ╚═════╝ ╚═════╝ ╚══════╝╚═╝ ╚═════╝        
                                                    
  ███╗   ███╗ █████╗  ██████╗██████╗  ██████╗ ███████╗
  ████╗ ████║██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔════╝
  ██╔████╔██║███████║██║     ██████╔╝██║   ██║███████╗
  ██║╚██╔╝██║██╔══██║██║     ██╔══██╗██║   ██║╚════██║
  ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║╚██████╔╝███████║
  ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝
  ############################################################################
  ############################################################################}
{%- macro TYPE(p, v) -%}
{%- set p = p|upper -%}
{%- set v = v|upper -%}
{%- if p == 'KIND' and  _workspace.KIND is none -%}
  {%- set  _workspace.KIND = v -%}
{%- elif p == 'NAME' and _workspace.NETDEV_NAME is none -%}
  {%- set _workspace.NETDEV_NAME = v -%}
{%- endif -%}{# End of if p == 'KIND' and  _workspace.KIND is none #}
{%- endmacro -%}
{# ############################################################################
   ############################################################################

  ██╗███╗   ███╗██████╗  ██████╗ ██████╗ ████████╗
  ██║████╗ ████║██╔══██╗██╔═══██╗██╔══██╗╚══██╔══╝
  ██║██╔████╔██║██████╔╝██║   ██║██████╔╝   ██║   
  ██║██║╚██╔╝██║██╔═══╝ ██║   ██║██╔══██╗   ██║   
  ██║██║ ╚═╝ ██║██║     ╚██████╔╝██║  ██║   ██║   
  ╚═╝╚═╝     ╚═╝╚═╝      ╚═════╝ ╚═╝  ╚═╝   ╚═╝  

  ############################################################################
  ############################################################################}
{%- import 'systemd-network.j2' as object with context -%}
{# ############################################################################
   ############################################################################

  ██████╗ ██████╗ ██╗██╗   ██╗ █████╗ ████████╗███████╗               
  ██╔══██╗██╔══██╗██║██║   ██║██╔══██╗╚══██╔══╝██╔════╝               
  ██████╔╝██████╔╝██║██║   ██║███████║   ██║   █████╗                 
  ██╔═══╝ ██╔══██╗██║╚██╗ ██╔╝██╔══██║   ██║   ██╔══╝                 
  ██║     ██║  ██║██║ ╚████╔╝ ██║  ██║   ██║   ███████╗               
  ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝  ╚═╝  ╚═╝   ╚═╝   ╚══════╝               
                                                                    
  ██╗   ██╗ █████╗ ██████╗ ██╗ █████╗ ██████╗ ██╗     ███████╗███████╗
  ██║   ██║██╔══██╗██╔══██╗██║██╔══██╗██╔══██╗██║     ██╔════╝██╔════╝
  ██║   ██║███████║██████╔╝██║███████║██████╔╝██║     █████╗  ███████╗
  ╚██╗ ██╔╝██╔══██║██╔══██╗██║██╔══██║██╔══██╗██║     ██╔══╝  ╚════██║
   ╚████╔╝ ██║  ██║██║  ██║██║██║  ██║██████╔╝███████╗███████╗███████║
    ╚═══╝  ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚══════╝╚══════╝

  ############################################################################
  ############################################################################}
{%- set _bond = {
    'ADACTORSYSTEM': { 'Name':'AdActorSystem', 'Type':'string' },
    'ADACTORSYSTEMPRIORITY': { 
      'Name':'AdActorSystemPriority',
      'Type':'string_number' },
    'ADSELECT': { 'Name':'AdSelect', 'Type':'string' },
    'ADUSERPORTKEY': { 'Name':'AdUserPortKey', 'Type':'string_number' },
    'ALLSLAVESACTIVE': { 'Name':'AllSlavesActive', 'Type':'boolean' },
    'ARPALLTARGETS': { 'Name':'ARPAllTargets', 'Type':'string' },
    'ARPINTERVALSEC': { 'Name':'ARPIntervalSec', 'Type':'number' },
    'ARPIPTARGETS': { 'Name':'ARPIPTargets', 'Type':'string' },
    'ARPVALIDATE': { 'Name':'ARPValidate', 'Type':'string' },
    'DOWNDELAYSEC': { 'Name':'DownDelaySec', 'Type':'number' },
    'DYNAMICTRANSMITLOADBALANCING': { 
      'Name':'DynamicTransmitLoadBalancing',
      'Type':'boolean' },
    'FAILOVERMACPOLICY': { 'Name':'FailOverMACPolicy', 'Type':'string' },
    'GRATUITOUSARP': { 'Name':'GratuitousARP', 'Type':'number' },
    'LACPTRANSMITRATE': { 'Name':'LACPTransmitRate', 'Type':'string_number' },
    'LEARNPACKETINTERVALSEC': { 
      'Name':'LearnPacketIntervalSec',
      'Type':'number' },
    'MIIMONITORSEC': { 'Name':'MIIMonitorSec', 'Type':'number' },
    'MINLINKS': { 'Name':'MinLinks', 'Type':'number' },
    'MODE': { 'Name':'Mode', 'Type':'string' },
    'PACKETSPERSLAVE': { 'Name':'PacketsPerSlave', 'Type':'number' },
    'PRIMARYRESELECTPOLICY': { 
      'Name':'PrimaryReselectPolicy',
      'Type':'string' },
    'RESENDIGMP': { 'Name':'ResendIGMP', 'Type':'number' },
    'TRANSMITHASHPOLICY': { 'Name':'TransmitHashPolicy', 'Type':'string' },  
    'UPDELAYSEC': { 'Name':'UpDelaySec', 'Type':'number' }} -%}
{%- set _bridge = {
    'AGEINGTIMESEC': { 'Name':'AgeingTimeSec', 'Type':'number' },
    'DEFAULTPVID': { 'Name':'DefaultPVID', 'Type':'string_number' },
    'FORWARDDELAYSEC': { 'Name':'ForwardDelaySec', 'Type':'number' },
    'GROUPFORWARDMASK': { 'Name':'GroupForwardMask', 'Type':'string' },
    'HELLOTIMESEC': { 'Name':'HelloTimeSec', 'Type':'number' },
    'MAXAGESEC': { 'Name':'MaxAgeSec', 'Type':'number' },
    'MULTICASTIGMPVERSION': { 'Name':'MulticastIGMPVersion', 'Type':'number' },
    'MULTICASTSNOOPING': { 'Name':'MulticastSnooping', 'Type':'boolean' },
    'MULTICASTQUERIER': { 'Name':'MulticastQuerier', 'Type':'boolean' },
    'PRIORITY': { 'Name':'Priority', 'Type':'number' },
    'STP': { 'Name':'STP', 'Type':'boolean' },
    'VLANFILTERING': { 'Name':'VLANFiltering', 'Type':'boolean' }  } -%}
{%- set _foooverudp = {
    'ENCAPSULATION': { 'Name':'Encapsulation', 'Type':'string' },
    'LOCAL': { 'Name':'Local', 'Type':'string' },
    'PEER': { 'Name':'Peer', 'Type':'string' },
    'PEERPORT': { 'Name':'PeerPort', 'Type':'number' },
    'PORT': { 'Name':'Port', 'Type':'number' },
    'PROTOCOL': { 'Name':'Protocol', 'Type':'string_number' }} -%}
{%- set _geneve = {
    'DESTINATIONPORT': { 'Name':'DestinationPort', 'Type':'number' },
    'FLOWLABEL': { 'Name':'FlowLabel', 'Type':'string' },
    'ID': { 'Name':'Id', 'Type':'number' },
    'IPDONOTFRAGMENT': { 'Name':'IPDoNotFragment', 'Type':'string_boolean'},
    'REMOTE': { 'Name':'Remote', 'Type':'string' },
    'TOS': { 'Name':'TOS', 'Type':'string' },
    'TTL': { 'Name':'TTL', 'Type':'boolean' },
    'UDPCHECKSUM': { 'Name':'UDPChecksum', 'Type':'boolean' },
    'UDP6ZEROCHECKSUMRX': { 'Name':'UDP6ZeroChecksumRx', 'Type':'boolean' },
    'UDP6ZEROCHECKSUMTX': { 'Name':'UDP6ZeroChecksumTx', 'Type':'boolean' }
    } -%}
{%- set _ipvlan = { 
    'FLAGS':{ 'Name':'Flags', 'Type':'string' },
    'MODE': { 'Name':'Mode', 'Type':'string' } } -%}
{%- set _ipvtap = { 
    'FLAGS':{ 'Name':'Flags', 'Type':'string' },
    'MODE': { 'Name':'Mode', 'Type':'string' } } -%}
{%- set _l2tp = {
    'ENCAPSULATIONTYPE': { 'Name':'EncapsulationType', 'Type':'string' },
    'LOCAL': { 'Name':'Local', 'Type':'string' },
    'PEERTUNNELID': { 'Name':'PeerTunnelId', 'Type':'number' },
    'REMOTE': { 'Name':'Remote', 'Type':'string' },
    'TUNNELID': { 'Name':'TunnelId', 'Type':'number' },
    'UDPCHECKSUM': { 'Name':'UDPChecksum', 'Type':'boolean' },
    'UDPDESTINATIONPORT': { 'Name':'UDPDestinationPort', 'Type':'number' },
    'UDPSOURCEPORT': { 'Name':'UDPSourcePort', 'Type':'number' },
    'UDP6ZEROCHECKSUMRX': { 'Name':'UDP6ZeroChecksumRx', 'Type':'boolean' },
    'UDP6ZEROCHECKSUMTX': { 'Name':'UDP6ZeroChecksumTx', 'Type':'boolean' }
    } -%}
{%- set _l2tpsession = {
    'NAME': { 'Name':'Name', 'Type':'string' },
    'LAYER2SPECIFICHEADER': { 'Name':'Layer2SpecificHeader', 'Type':'string' },
    'PEERSESSIONID': { 'Name':'PeerSessionId', 'Type':'string_number' },
    'SESSIONID': { 'Name':'SessionId', 'Type':'string_number' }
    } -%}
{%- set _macsec = {
    'ENCRYPT': { 'Name':'Encrypt', 'Type':'boolean' },
    'PORT': { 'Name':'Port', 'Type':'number' }} -%}
{%- set _macsecreceivechannel = {
    'MACADDRESS': { 'Name':'MACAddress', 'Type':'string' },
    'PORT': { 'Name':'Port', 'Type':'number' }} -%}
{%- set _macsecreceiveassociation = {
    'ACTIVATE': { 'Name':'Activate', 'Type':'boolean' },
    'KEY': { 'Name':'Key', 'Type':'string_number' },
    'KEYFILE': { 'Name':'KeyFile', 'Type':'string' },
    'KEYID': { 'Name':'KeyId', 'Type':'number' },
    'MACADDRESS': { 'Name':'MACAddress', 'Type':'string' },
    'PACKETNUMBER': { 'Name':'PacketNumber', 'Type':'number' },
    'PORT': { 'Name':'Port', 'Type':'number' }} -%}
{%- set _macsectransmitassociation = {
    'ACTIVATE': { 'Name':'Activate', 'Type':'boolean' },
    'KEY': { 'Name':'Key', 'Type':'string_number' },
    'KEYFILE': { 'Name':'KeyFile', 'Type':'string' },
    'KEYID': { 'Name':'KeyId', 'Type':'number' },
    'PACKETNUMBER': { 'Name':'PacketNumber', 'Type':'number' },
    'USEFORENCODING': { 'Name':'UseForEncoding', 'Type':'boolean' }} -%}
{%- set _macvlan = { 
    'MODE':{ 'Name':'Mode', 'Type':'string' }} -%}
{%- set _macvtap = { 
    'MODE':{ 'Name':'Mode', 'Type':'string' } } -%}
{%- set _match = {
    'ARCHITECTURE': { 'Name':'Architecture', 'Type':'string' },
    'HOST': { 'Name':'Host', 'Type':'string' },
    'KERNELCOMMANDLINE': { 'Name':'KernelCommandLine', 'Type':'string' },
    'KERNELVERSION': { 'Name':'KernelVersion', 'Type':'string' },
    'VIRTUALIZATION': { 'Name':'Virtualization', 'Type':'boolean' }
    } -%}
{%- set _netdev = {
    'DESCRIPTION': { 'Name':'Description', 'Type':'string' },
    'KIND': { 'Name':'Kind', 'Type':'string' },
    'MTUBYTES': { 'Name':'MTUBytes', 'Type':'number' },
    'MACADDRESS': { 'Name':'MACAddress', 'Type':'string' },
    'NAME': { 'Name':'Name', 'Type':'string' } } -%}
{%- set _peer = {
    'NAME': { 'Name':'Name', 'Type':'string' },
    'MACADDRESS': { 'Name':'MACAddress', 'Type':'string' }} -%}
{%- set _tap = {
    'GROUP': { 'Name':'Group', 'Type':'string' },
    'MULTIQUEUE': { 'Name':'MultiQueue', 'Type':'boolean' },
    'PACKETINFO': { 'Name':'PacketInfo', 'Type':'boolean' },
    'VNETHEADER': { 'Name':'VNetHeader', 'Type':'boolean' },
    'USER': { 'Name':'User', 'Type':'string' }} -%}
{%- set _tun = {
    'GROUP': { 'Name':'Group', 'Type':'string' },
    'MULTIQUEUE': { 'Name':'MultiQueue', 'Type':'boolean' },
    'PACKETINFO': { 'Name':'PacketInfo', 'Type':'boolean' },
    'VNETHEADER': { 'Name':'VNetHeader', 'Type':'boolean' },
    'USER': { 'Name':'User', 'Type':'string' }} -%}
{%- set _tunnel = {
    'ALLOWLOCALREMOTE': { 'Name':'AllowLocalRemote', 'Type':'boolean' },
    'ASSIGNTOLOOPBACK': { 'Name':'AssignToLoopback', 'Type':'boolean' },
    'COPYDSCP': { 'Name':'CopyDSCP', 'Type':'boolean' },
    'DISCOVERPATHMTU': { 'Name':'DiscoverPathMTU', 'Type':'boolean' },
    'ENCAPSULATION': { 'Name':'Encapsulation', 'Type':'string' },
    'ENCAPSULATIONLIMIT': { 
      'Name':'EncapsulationLimit',
      'Type':'string_number' },
    'ERSPANINDEX': { 'Name':'ERSPANIndex', 'Type':'number' },
    'FOUDESTINATIONPORT': { 'Name':'FOUDestinationPort', 'Type':'number' },
    'FOOOVERUDP': { 'Name':'FooOverUDP', 'Type':'boolean' },
    'FOUSOURCEPORT': { 'Name':'FOUSourcePort', 'Type':'number' },
    'INDEPENDENT': { 'Name':'Independent', 'Type':'boolean' },
    'INPUTKEY': { 'Name':'InputKey', 'Type':'string' },
    'IPV6FLOWLABEL': { 'Name':'IPv6FlowLabel', 'Type':'string_number' },
    'IPV6RAPIDDEPLOYMENTPREFIX': { 
      'Name':'IPv6RapidDeploymentPrefix',
      'Type':'string_number' },
    'ISATAP': { 'Name':'ISATAP', 'Type':'boolean' },
    'LOCAL': { 'Name':'Local', 'Type':'string' },
    'KEY': { 'Name':'Key', 'Type':'string' },
    'MODE': { 'Name':'Mode', 'Type':'string' },
    'OUTPUTKEY': { 'Name':'OutputKey', 'Type':'string' },
    'TOS': { 'Name':'TOS', 'Type':'number' },
    'TTL': { 'Name':'TTL', 'Type':'number' },
    'REMOTE': { 'Name':'Remote', 'Type':'string' },
    'SERIALIZETUNNELEDPACKETS': { 
      'Name':'SerializeTunneledPackets',
      'Type':'boolean' }
    } -%}
{%- set _vlan = {
    'GVRP': { 'Name':'GVRP', 'Type':'boolean' },
    'ID': { 'Name':'Id', 'Type':'number' },
    'LOOSEBINDING': { 'Name':'LooseBinding', 'Type':'boolean' },
    'MVRP': { 'Name':'MVRP', 'Type':'boolean' },
    'REORDERHEADER': { 'Name':'ReorderHeader', 'Type':'boolean' } } -%}
{%- set _vrf = { 'TABLE': { 'Name': 'Table', 'Type':'string_number'}} -%}
{%- set _vxcan = {
    'PEER': { 'Name':'Peer', 'Type':'string' }} -%}
{%- set _vxlan = {
    'DESTINATIONPORT': { 'Name':'DestinationPort', 'Type':'number' },
    'FDBAGEINGSEC': { 'Name':'FDBAgeingSec', 'Type':'number' },
    'FLOWLABEL': { 'Name':'FlowLabel', 'Type':'string' },
    'GENERICPROTOCOLEXTENSION': { 
      'Name':'GenericProtocolExtension',
      'Type':'boolean' },
    'GROUP': { 'Name':'Group', 'Type':'string' },
    'GROUPPOLICYEXTENSION': { 'Name':'GroupPolicyExtension', 'Type':'boolean' },
    'IPDONOTFRAGMENT': { 'Name':'IPDoNotFragment', 'Type':'string_boolean'},
    'LOCAL': { 'Name':'Local', 'Type':'string' },
    'L2MISSNOTIFICATION': { 'Name':'L2MissNotification', 'Type':'boolean' },
    'L3MISSNOTIFICATION': { 'Name':'L3MissNotification', 'Type':'boolean' },
    'MACLEARNING': { 'Name':'MacLearning', 'Type':'boolean' },
    'MAXIMUMFDBENTRIES': { 'Name':'MaximumFDBEntries', 'Type':'number' },
    'PORTRANGE': { 'Name':'PortRange', 'Type':'string_number' },
    'REDUCEARPPROXY': { 'Name':'ReduceARPProxy', 'Type':'boolean' },
    'REMOTE': { 'Name':'Remote', 'Type':'string' },
    'REMOTECHECKSUMRX': { 'Name':'RemoteChecksumRx', 'Type':'boolean' },
    'REMOTECHECKSUMTX': { 'Name':'RemoteChecksumTx', 'Type':'boolean' },
    'ROUTESHORTCIRCUIT': { 'Name':'RouteShortCircuit', 'Type':'boolean' },   
    'TOS': { 'Name':'TOS', 'Type':'number' },
    'TTL': { 'Name':'TTL', 'Type':'string_number' },
    'UDPCHECKSUM': { 'Name':'UDPChecksum', 'Type':'boolean' },
    'UDP6ZEROCHECKSUMRX': { 'Name':'UDP6ZeroChecksumRx', 'Type':'boolean' },
    'UDP6ZEROCHECKSUMTX': { 'Name':'UDP6ZeroChecksumTx', 'Type':'boolean' },
    'VNI': { 'Name':'VNI', 'Type':'number' }  } -%}
{%- set _wireguard = {
    'FIREWALLMARK': { 'Name':'FirewallMark', 'Type':'number' },
    'LISTENPORT': { 'Name':'ListenPort', 'Type':'string_number' },
    'PRIVATEKEY': { 'Name':'PrivateKey', 'Type':'string' },
    'PRIVATEKEYFILE': { 'Name':'PrivateKeyFile', 'Type':'string' }} -%}
{%- set _wireguardpeer = {
    'ALLOWEDIPS': { 'Name':'AllowedIPs', 'Type':'string' },
    'ENDPOINT': { 'Name':'Endpoint', 'Type':'string_number' },
    'PERSISTENTKEEPALIVE': { 'Name':'PersistentKeepalive', 'Type':'string' },
    'PRESHAREDKEY': { 'Name':'PresharedKey', 'Type':'string' },
    'PRESHAREDKEYFILE': { 'Name':'PresharedKeyFile', 'Type':'string' },
    'PUBLICKEY': { 'Name':'PublicKey', 'Type':'string' }} -%}
{%- set _xfrm = {
    'INDEPENDENT': { 'Name':'Independent', 'Type':'boolean' },
    'INTERFACEID': { 'Name':'InterfaceId', 'Type':'string_number' }} -%}
{%- set _workspace = namespace(
      KIND=none,
      NETDEV_NAME=none,
      SECTIONS=[ 'MATCH', 'NETDEV' ]) -%}
{# ############################################################################
   ############################################################################

  ██████╗ ██████╗  ██████╗  ██████╗███████╗███████╗███████╗
  ██╔══██╗██╔══██╗██╔═══██╗██╔════╝██╔════╝██╔════╝██╔════╝
  ██████╔╝██████╔╝██║   ██║██║     █████╗  ███████╗███████╗
  ██╔═══╝ ██╔══██╗██║   ██║██║     ██╔══╝  ╚════██║╚════██║
  ██║     ██║  ██║╚██████╔╝╚██████╗███████╗███████║███████║
  ╚═╝     ╚═╝  ╚═╝ ╚═════╝  ╚═════╝╚══════╝╚══════╝╚══════╝

  ############################################################################
  ############################################################################}
{# Upload section dictionaries into macro SECTION_MAP #}
{%- if _match is defined and _match -%}
  {{- object.SECTION_MAP('MATCH', _match) -}}{%- endif -%}
{%- if _netdev is defined and _netdev -%}
  {{- object.SECTION_MAP('NETDEV', _netdev) -}}{%- endif -%}
{#
  # Loop through all specified items that are set under systemd_networks
  # to find the key parameter 'KIND' and to store that value into attribute
  # KIND from the container  _workspace.
#}
{%- for key, value in item.items() -%}
  {%- if  _workspace.KIND is none -%}
    {%- set key = key| upper -%}
    {%- if key == 'KIND' and value is defined and value is iterable 
          and value is not mapping -%}
{{- TYPE(key, value) -}}
    {%- elif key == 'NETDEV' and value is defined and value is iterable 
          and value is mapping -%}
      {%- for k, v in value.items() -%}{{- TYPE(k, v) -}}{%- endfor -%}
    {%- endif -%}{# End of if key == ??? and value is defined and ... #}
  {%- endif -%}{# End of if  _workspace.KIND is none #}
  {%- if _workspace.NETDEV_NAME is none -%}
    {%- if key == 'NAME' and value is defined and value is string -%}
      {{- PRESET(key, value) -}}
    {%- elif key == 'MATCH' and value is defined and value is iterable 
          and value is mapping -%}
      {%- for k, v in value.items() -%}{{- PRESET(k, v) -}}{%- endfor -%}
    {%- endif -%}
  {%- endif -%}
{%- endfor -%}{#

  #####################
  # If  _workspace.KIND is defined and set then depeding the kind value upload
  # the dictionary to the macro SECTION_MAP  #}
{%- if  _workspace.KIND is not none -%}
  {%- if  _workspace.KIND == 'BOND' and _bond is defined and _bond -%}
    {{- object.SECTION_MAP('BOND', _bond) -}}
    {{- _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'BRIDGE' and _bridge is defined and _bridge -%}
    {{- object.SECTION_MAP('BRIDGE', _bridge) -}}
    {{- _workspace.SECTIONS.append( _workspace.KIND) -}}{%- endif -%}
  {%- if  _workspace.KIND == 'FOOOVERUDP' and _foooverudp is defined 
        and _foooverudp -%}
    {{- object.SECTION_MAP('FOOOVERUDP', _foooverudp) -}}
    {{- _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'GENEVE' and _geneve is defined and _geneve -%}
    {{- object.SECTION_MAP('GENEVE', _geneve) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'IPVLAN' and _ipvlan is defined and _ipvlan -%}
    {{- object.SECTION_MAP('IPVLAN', _ipvlan) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'IPVTAP' and _ipvtap is defined and _ipvtap -%}
    {{- object.SECTION_MAP('IPVTAP', _ipvtap) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'L2TP' and _l2tp is defined and _l2tp -%}
    {{- object.SECTION_MAP('L2TP', _l2tp) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'L2TPSESSION' and _l2tpsession is defined
        and _l2tpsession -%}
    {{- object.SECTION_MAP('L2TPSESSION', _l2tpsession) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'MACSEC' and _macsec is defined and _macsec -%}
    {{- object.SECTION_MAP('MACSEC', _macsec) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'MACSECRECEIVECHANNEL'
        and _macsecreceivechannel is defined and _macsecreceivechannel -%}
    {{- object.SECTION_MAP('MACSECRECEIVECHANNEL', _macsecreceivechannel) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'MACSECRECEIVEASSOCIATION' and
        _macsecreceiveassociation is defined and _macsecreceiveassociation -%}
    {{- object.SECTION_MAP('MACSECRECEIVEASSOCIATION', _macsecreceiveassociation) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'MACSECTRANSMITASSOCIATION'
        and _macsectransmitassociation is defined
        and _macsectransmitassociation -%}
    {{- object.SECTION_MAP('MACSECTRANSMITASSOCIATION', _macsectransmitassociation) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'MACVLAN' and _macvlan is defined and _macvlan -%}
    {{- object.SECTION_MAP('MACVLAN', _macvlan) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'MACVTAP' and _macvtap is defined and _macvtap -%}
    {{- object.SECTION_MAP('MACVTAP', _macvtap) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'PEER' and _peer is defined and _peer -%}
    {{- object.SECTION_MAP('PEER', _peer) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'TAP' and _tap is defined and _tap -%}
    {{- object.SECTION_MAP('TAP', _tap) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'TUN' and _tun is defined and _tun -%}
    {{- object.SECTION_MAP('TUN', _tun) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'TUNNEL' and _tunnel is defined and _tunnel -%}
    {{- object.SECTION_MAP('TUNNEL', _tunnel) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'VLAN' and _vlan is defined and _vlan -%}
    {{- object.SECTION_MAP('VLAN', _vlan) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'VRF' and _vrf is defined and _vrf -%}
    {{- object.SECTION_MAP('VRF', _vrf) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'VXCAN' and _vxcan is defined and _vxcan -%}
    {{- object.SECTION_MAP('VXCAN', _vxcan) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'VXLAN' and _vxlan is defined and _vxlan -%}
    {{- object.SECTION_MAP('VXLAN', _vxlan) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'WIREGUARD' and _wireguard is defined and _wireguard -%}
    {{- object.SECTION_MAP('WIREGUARD', _wireguard) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'WIREGUARDPEER' and _wireguardpeer is defined
        and _wireguardpeer -%}
    {{- object.SECTION_MAP('WIREGUARDPEER', _wireguardpeer) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
  {%- if  _workspace.KIND == 'XFRM' and _xfrm is defined and _xfrm -%}
    {{- object.SECTION_MAP('XFRM', _xfrm) -}}
    {{-  _workspace.SECTIONS.append( _workspace.KIND) -}}
  {%- endif -%}
{%- endif -%}{#

  #####################
  # Upload the section list that is stored under the attribute 'SECTIONS' from
  # the container '_workspace'.   #}
{%- if _workspace.SECTIONS is defined and _workspace.SECTIONS is not none -%}
  {{- object.SET_SECTIONS(_workspace.SECTIONS) -}}
{%- endif -%}{# End of for key, value in item.items()

  #####################
  # Key 'NAME' was found then set under section '[NetDev]' the parameter 'Name'
  # with found value string. If key 'NAME' not found found, also specify the
  # parameter 'Name' under section '[NetDev]' where the value is item.interface.
#}
{%- if _workspace.NETDEV_NAME is not none -%}
  {{- object.FIND_KEY( ['NETDEV'], 'NAME', _workspace.NETDEV_NAME) -}}
{%- else -%}
  {{- object.FIND_KEY( ['NETDEV'], 'NAME', item.interface) -}}
{%- endif -%}{#


  #####################
  # Loop through all items
  #}
{%- for key , values in item.items() -%}
  {%- set key = key|upper -%}
  {%- if key != 'INTERFACE' -%}
    {{- object.FIND_KEY( _workspace.SECTIONS, key, values) -}}
  {%- endif -%}
{%- endfor -%}
{# 
  ########################################
  # Begin of DISPLAY                     #
  #                                      #
#}
{%- for section in  _workspace.SECTIONS -%}
  {{- object.DISPLAY(section|upper) -}}
{%- endfor -%}