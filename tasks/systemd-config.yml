---
#   ██████╗ ██████╗ ███╗   ██╗███████╗██╗ ██████╗               
#  ██╔════╝██╔═══██╗████╗  ██║██╔════╝██║██╔════╝               
#  ██║     ██║   ██║██╔██╗ ██║█████╗  ██║██║  ███╗█████╗        
#  ██║     ██║   ██║██║╚██╗██║██╔══╝  ██║██║   ██║╚════╝        
#  ╚██████╗╚██████╔╝██║ ╚████║██║     ██║╚██████╔╝              
#   ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     ╚═╝ ╚═════╝               
#                                                              
#  ███████╗██╗   ██╗███████╗████████╗███████╗███╗   ███╗██████╗ 
#  ██╔════╝╚██╗ ██╔╝██╔════╝╚══██╔══╝██╔════╝████╗ ████║██╔══██╗
#  ███████╗ ╚████╔╝ ███████╗   ██║   █████╗  ██╔████╔██║██║  ██║
#  ╚════██║  ╚██╔╝  ╚════██║   ██║   ██╔══╝  ██║╚██╔╝██║██║  ██║
#  ███████║   ██║   ███████║   ██║   ███████╗██║ ╚═╝ ██║██████╔╝
#  ╚══════╝   ╚═╝   ╚══════╝   ╚═╝   ╚══════╝╚═╝     ╚═╝╚═════╝ 
#
                                                             
# -----------------------------------------------------------------------------
# template - Template a file out to a remote server
# Template a file to '/etc/systemd/resolved.conf', using symbolic modes 
# (equivalent to 0644). The variable 'systemd_resolved' can be defined in a
# playbook.
#
# Example:
# - hosts: myhost
#   remote_user: deployer
#   become: True
#   become_method: sudo
#   become_user: root
#   gather_facts: True
#   roles:
#     - role: systemd-networkd
#   vars:
#     system_resolved:
#       DNS: '10.31.196.1'
#       FallbackDNS: '1.1.1.1 1.0.0.1'
# -----------------------------------------------------------------------------
#
- name: systemd-config | Create systemd-resolved config.
  template:
    src: 'etc/systemd/resolved.conf.j2'
    dest: '/etc/systemd/resolved.conf'
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  when:
    - systemd_resolved is defined
    - systemd_resolved is not none
    - systemd_resolved | length > 0
  notify:
    - Restart systemd-resolved
  tags: 
    - config-systemd
    - systemd-resolved
    - create file

# -----------------------------------------------------------------------------
# .netdev files: this will create a virtual network device for a matching
#  environment.
#
# Template a file, using symbolic modes (equivalent to 0644). The variable 
# 'systemd_networks' can be defined in a playbook.
#
# Example:
# - hosts: myhost
#   remote_user: deployer
#   become: True
#   become_method: sudo
#   become_user: root
#   gather_facts: True
#   roles:
#     - role: systemd-networkd
#   vars:
#     systemd_networks:
#       - interface: bond1
#         NetDev:
#           Kind: bond
#         Bond:
#           DownDelaySec: 200
#           LACPTransmitRate: fast
#           Mode: 802.3ad
#           TransmitHashPolicy: layer2+3
#           UpDelaySec: 200
# -----------------------------------------------------------------------------
#
- name: systemd-config | Create systemd-networkd network netdev(s).
  template:
    src: 'etc/systemd/network/systemd-netdev.j2'
    dest: '/etc/systemd/network/{{ (item.interface) ~ ".netdev" }}'
    owner: 'root'
    group: 'root'
    mode: u=rw,g=r,o=r
  with_items: '{{ systemd_networks|lower }}'
  when: 
    - systemd_networks is defined
    - systemd_networks is iterable
    - systemd_networks is not string
    - item.interface is defined
    - item.interface is not none
    - item.kind is defined or item.netdev.kind is defined 
  notify:
    - Restart systemd-networkd
  tags:
    - config-systemd
    - systemd-networkd
    - create file

# -----------------------------------------------------------------------------
# .link files: When a network device appears, udev will look for the first 
# matching.
#
# Template a file, using symbolic modes (equivalent to 0644). The variable
# 'systemd_networks' can be defined in a playbook.
#
# Example:
# - hosts: myhost
#   remote_user: deployer
#   become: True
#   become_method: sudo
#   become_user: root
#   gather_facts: True
#   roles:
#     - role: systemd-networkd
#   vars:
#     systemd_networks:
#       - interface: eth0
#         udev: yes
#         Link:
#           MTUBytes: 1500
# -----------------------------------------------------------------------------
# 
- name: systemd-config | Create systemd-networkd network link(s).
  template:
    src: 'etc/systemd/network/systemd-link.j2'
    dest: '/etc/systemd/network/{{ (item.interface) ~ ".link" }}'
    owner: 'root'
    group: 'root'
    mode: u=rw,g=r,o=r
  with_items: '{{ systemd_networks }}'
  when: 
    - systemd_networks is defined
    - systemd_networks is iterable
    - systemd_networks is not string
    - item.interface is defined
    - item.interface is not none
    - item.udev is defined
    - item.udev is true
  notify:
    - Restart systemd-networkd
  tags:
    - config-systemd
    - systemd-networkd
    - create file

# -----------------------------------------------------------------------------
# .network files: containing the following sections: 
# [Match], [Link], [Network], [Address], [Route], [DHCPv4] and [DHCPv6].
#
# Template a file, using symbolic modes (equivalent to 0644). The variable 
# 'systemd_networks' can be defined in a playbook.
#
# Example:
# - hosts: myhost
#   remote_user: deployer
#   become: True
#   become_method: sudo
#   become_user: root
#   gather_facts: True
#   roles:
#     - role: systemd-networkd
#   vars:
#     systemd_networks:
#       - interface: eth0
#       Match:
#         Architecture: x86-64
#       Network:
#         DHCP: no
#       Address: 192.168.1.51/24
#       Gateway: 192.168.1.1
# -----------------------------------------------------------------------------
#
- name: systemd-config | Create systemd-networkd network network(s).
  template:
    src: 'etc/systemd/network/systemd-network.j2'
    dest: '/etc/systemd/network/{{ (item.interface) ~ ".network" }}'
    owner: 'root'
    group: 'root'
    mode: u=rw,g=r,o=r
  with_items: '{{ systemd_networks }}'
  when: 
    - systemd_networks is defined
    - systemd_networks is iterable
    - systemd_networks is not string
    - item.interface is defined
    - item.interface is not none
  notify:
    - Restart systemd-networkd
  tags:
    - config-systemd
    - systemd-networkd
    - create file
